Project structure:

Classes:

    Controller: Handles input and output from the GUI.
    Handles button presses, getting any text fields, as
    well as displaying and updating the text fields.

    Handler: Reads a line from the MIPS file and updates the
    memory and registers.

    Main: Responsible for launching the JavaFX Window

Microcode steps:

    Load operation:

    Store operation:

    add (ex. add $t0, $t1, $t2):
    - send $t1 to the alu
    - send $t2 to the alu
    - alu performs addition on $t1 and $t2 (hardware circuit)
    - alu stores the 32-bit result in $t0
    - set condition code
    - $pc = $pc + 4 // advance the program counter by 4 bytes

    subtract (ex. sub $t0, $t1, $t2):
    - send $t1 to the alu
    - send $t2 to the alu
    - alu performs subtraction on $t1 and $t2 (hardware circuit)
    - alu stores the 32-bit result in $t0
    - set condition code
    - $pc = $pc + 4 // advance the program counter by 4 bytes

    multiply (ex. mult $t0, $t1):
    - send $t0 to the alu
    - send $t1 to the alu
    - alu performs multiplication on $t0 and $t1 (hardware circuit)
    - alu stores the 64-bit result in $mflo and $mfhi
    - set condition code
    - $pc = $pc + 4 // advance the program counter by 4 bytes

    and (ex. AND $t0, $t1, $t2):
    - send $t1 to the alu
    - send $t2 to the alu
    - alu performs a bitwise AND operation on $t1 and $t2 (hardware circuit)
	- alu stores the 32-bit result in $t0
    - Set condition code
    - $pc = $pc + 4 // advance the program counter by 4 bytes

    OR (ex. or $t0, $t1, $t2):
    - send $t1 to the alu
    - send $t2 to the alu
    - alu performs a bitwise OR operation on $t1 and $t2 (hardware circuit)
	- alu stores the 32-bit result in $t0
    - Set condition code
    - $pc = $pc + 4 // advance the program counter by 4 bytes

    NOT (ex. not $t0, $t1):
    - send $t0 to the alu
    - send $t1 to the alu
    - alu performs a bitwise NOT operation on $t1 (hardware circuit)
	- alu stores the 32-bit result in $t0
	- Set condition code
    - $pc = $pc + 4 // advance the program counter b 4 bytes

    XOR (ex. XOR $t0, $t1, $t2):
    - send $t1 to the alu
    - send $t2 to the alu
    - alu performs a bitwise XOR operation on $t1 and $t2 (hardware circuit)
	- alu stores the 32-bit result in $t0
    - Set condition code
    - $pc = $pc + 4 // advance the program counter by 4 bytes

    jal (ex. jal 5000):
    - store the value of $pc in $ra
    - set $pc to 5000